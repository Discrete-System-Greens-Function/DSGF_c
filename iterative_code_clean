
            	/*
            	//flip upper triangular matrix https://www.tutorialspoint.com/program-to-print-lower-triangular-and-upper-triangular-matrix-of-an-array-in-c
            	for (int jg_0 = 0; jg_0 < tot_sub_vol; jg_0++) //tot_sub_vol
            	{
            	for (int ig_0 = jg_0; ig_0 < tot_sub_vol; ig_0++) //tot_sub_vol  ig_0
            	{
            	if(ig_0!=jg_0){
            	   for(int i_subG_0 = 0; i_subG_0 < 3; i_subG_0++) // 3D coordinate positions
                   {
            		 	for(int j_subG_0 = 0; j_subG_0 < 3; j_subG_0++) // 3D coordinate positions 
                      		{
                      			G_sys_new[jg_0_2d][ig_0_2d] = G_sys_new[ig_0_2d][jg_0_2d] ;
                  			//G_sys_new[jg_0][ig_0][i_subG_0][j_subG_0]=G_sys_new[ig_0][jg_0][i_subG_0][j_subG_0];
                      		}    
                 		     	
                  }
               }  	//printf("\n");		
            	} // jg_0
            	} // ig_0
            	*/
            	
            	
            	
            	
            	
            	
            	
            	
            		    /*
            for (int ig_0 = 0; ig_0 < tot_sub_vol; ig_0++) //tot_sub_vol
            		{
            			for (int jg_0 = 0; jg_0 < tot_sub_vol; jg_0++) //tot_sub_vol
            			{ 
            				for(int i_subG_0 = 0; i_subG_0 < 3; i_subG_0++) // 3D coordinate positions
                			{
                    				for(int j_subG_0 = 0; j_subG_0 < 3; j_subG_0++) // 3D coordinate positions 
                       			{
            						G_sys_old[ig_0][jg_0][i_subG_0][j_subG_0]=G_0[ig_0][jg_0][i_subG_0][j_subG_0];
            					}
            				}
            			}
            		}
            */	
            	/* old version
            	for(int i_sub = 0; i_sub < 3; i_sub++) // 3D coordinate positions
                {
                    		for(int j_sub = 0; j_sub < 3; j_sub++) // 3D coordinate positions 
                       	{
                       		A[mm][mm][i_sub][j_sub] = eye_iter[i_sub][j_sub] - pow(k,2)*alpha_0[mm]*G_sys_old[mm][mm][i_sub][j_sub]; 
            				//printf("%e + i %e ; ", creal(A[mm][mm][i_sub][j_sub]),cimag(A[mm][mm][i_sub][j_sub]));//alpha_0[mm]  eyeA[mm][mm][i_subG_0][j_subG_0]
            				//printf("%e + i %e ; ", creal(eye_iter[i_subG_0][j_subG_0]),cimag(eye_iter[i_subG_0][j_subG_0]));// eyeG_0[i_subG_0][j_subG_0] 
            			}
            			//printf("\n");
            	}
            	*/
            	
            	
